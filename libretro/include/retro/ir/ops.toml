Includes = [
	"<retro/ir/builtin_types.hxx>"
]
Forwards = [
	"type"
]

op-kind = [
	"unary-signed",
	"unary-unsigned",
	"unary-bitwise",
	"unary-float",
	"binary-signed",
	"binary-unsigned",
	"binary-bitwise",
	"binary-float",
	"cmp-signed",
	"cmp-unsigned",
]

# Unary operations
#
[op.neg]
symbol = "-"
kind   = "@op-kind.unary-signed"
inverse = "@op.neg"
[op.abs]
symbol = "abs"
kind   = "@op-kind.unary-signed"
[op.bit_lsb]
symbol = "lsb"
kind   = "@op-kind.unary-bitwise"
[op.bit_msb]
symbol = "msb"
kind   = "@op-kind.unary-bitwise"
[op.bit_popcnt]
symbol = "popcnt"
kind   = "@op-kind.unary-bitwise"
[op.bit_byteswap]
symbol = "bswap"
kind   = "@op-kind.unary-bitwise"
[op.bit_not]
symbol = "~"
kind   = "@op-kind.unary-bitwise"
inverse = "@op.bit_not"
[op.ceil]
symbol = "ceil"
kind   = "@op-kind.unary-float"
[op.floor]
symbol = "floor"
kind   = "@op-kind.unary-float"
[op.trunc]
symbol = "trunc"
kind   = "@op-kind.unary-float"
[op.round]
symbol = "round"
kind   = "@op-kind.unary-float"
[op.sin]
symbol = "sin"
kind   = "@op-kind.unary-float"
[op.cos]
symbol = "cos"
kind   = "@op-kind.unary-float"
[op.tan]
symbol = "tan"
kind   = "@op-kind.unary-float"
[op.asin]
symbol = "asin"
kind   = "@op-kind.unary-float"
[op.acos]
symbol = "acos"
kind   = "@op-kind.unary-float"
[op.atan]
symbol = "atan"
kind   = "@op-kind.unary-float"
[op.sqrt]
symbol = "sqrt"
kind   = "@op-kind.unary-float"
[op.exp]
symbol  = "exp"
kind    = "@op-kind.unary-float"
inverse = "@op.log"
[op.log]
symbol  = "log"
kind    = "@op-kind.unary-float"
inverse = "@op.exp"
[op.atan2]
symbol = "atan2"
kind   = "@op-kind.binary-float"
[op.pow]
symbol = "pow"
kind   = "@op-kind.binary-float"

# Binary operations
#
[op.add]
symbol = "+"
kind   = "@op-kind.binary-signed"
commutative = true
[op.sub]
symbol = "-"
kind   = "@op-kind.binary-signed"
[op.mul]
symbol = "*"
kind   = "@op-kind.binary-signed"
commutative = true
[op.div]
symbol = "/"
kind   = "@op-kind.binary-signed"
swap_sign = "@op.udiv"
[op.udiv]
symbol = "u/"
kind   = "@op-kind.binary-unsigned"
swap_sign = "@op.div"
[op.rem]
symbol = "%"
kind   = "@op-kind.binary-signed"
swap_sign = "@op.urem"
[op.urem]
symbol = "u%"
kind   = "@op-kind.binary-unsigned"
swap_sign = "@op.rem"
[op.bit_or]
symbol = "|"
kind   = "@op-kind.binary-bitwise"
commutative = true
[op.bit_and]
symbol = "&"
kind   = "@op-kind.binary-bitwise"
commutative = true
[op.bit_xor]
symbol = "^"
kind   = "@op-kind.binary-bitwise"
inverse = "@op.bit_xor"
commutative = true
[op.bit_shl]
symbol = "<<"
kind   = "@op-kind.binary-bitwise"
[op.bit_shr]
symbol = ">>"
kind   = "@op-kind.binary-bitwise"
swap_sign = "@op.bit_sar"
[op.bit_sar]
symbol = "s>>"
kind   = "@op-kind.binary-bitwise"
swap_sign = "@op.bit_shr"
[op.bit_rol]
symbol = "rotl"
kind   = "@op-kind.binary-bitwise"
inverse = "@op.bit_ror"
[op.bit_ror]
symbol = "rotr"
kind   = "@op-kind.binary-bitwise"
inverse = "@op.bit_rol"

[op.max]
symbol = "max"
kind   = "@op-kind.binary-signed"
swap_sign = "@op.umax"
commutative = true
[op.umax]
symbol = "umax"
kind   = "@op-kind.binary-unsigned"
swap_sign = "@op.max"
commutative = true
[op.min]
symbol = "min"
kind   = "@op-kind.binary-signed"
swap_sign = "@op.umin"
commutative = true
[op.umin]
symbol = "umin"
kind   = "@op-kind.binary-unsigned"
swap_sign = "@op.min"
commutative = true

# Comperators
#
[op.gt]
symbol = ">"
kind   = "@op-kind.cmp-signed"
inverse = "@op.le"
swap_sign  = "@op.ugt"
[op.ugt]
symbol = "u>"
kind   = "@op-kind.cmp-unsigned"
inverse = "@op.ule"
swap_sign  = "@op.gt"
[op.le]
symbol = "<="
kind   = "@op-kind.cmp-signed"
inverse = "@op.gt"
swap_sign = "@op.ule"
[op.ule]
symbol = "u<="
kind   = "@op-kind.cmp-unsigned"
inverse = "@op.ugt"
swap_sign = "@op.le"
[op.ge]
symbol = ">="
kind   = "@op-kind.cmp-signed"
inverse = "@op.lt"
swap_sign  = "@op.uge"
[op.uge]
symbol = "u>="
kind   = "@op-kind.cmp-unsigned"
inverse = "@op.ult"
swap_sign  = "@op.ge"
[op.lt]
symbol = "<"
kind   = "@op-kind.cmp-signed"
inverse = "@op.ge"
swap_sign = "@op.ult"
[op.ult]
symbol = "u<"
kind   = "@op-kind.cmp-unsigned"
inverse = "@op.uge"
swap_sign = "@op.lt"
[op.eq]
symbol = "=="
kind   = "@op-kind.cmp-signed"
inverse = "@op.ne"
commutative = true
[op.ne]
symbol = "!="
kind   = "@op-kind.cmp-signed"
inverse = "@op.eq"
commutative = true

# Memory intrinsics.
#
[intrinsic.alloc-stack]
symbol = "alloca"
args =   ["@type.i32"]
ret =    "@type.pointer"
[intrinsic.malloc]
args =   ["@type.i64"]
ret =    "@type.pointer"
[intrinsic.realloc]
args =   ["@type.pointer", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.free]
args =   ["@type.pointer"]
[intrinsic.sfence]
args =   []
[intrinsic.lfence]
args =   []
[intrinsic.mfence]
args =   []

# String intrinsics.
#
[intrinsic.memcpy]
args =   ["@type.pointer", "@type.pointer", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memmove]
args =   ["@type.pointer", "@type.pointer", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memcmp]
args =   ["@type.pointer", "@type.pointer", "@type.i64"]
ret =    "@type.i32"
[intrinsic.memset]
args =   ["@type.pointer", "@type.i32", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memset16]
args =   ["@type.pointer", "@type.i32", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memset32]
args =   ["@type.pointer", "@type.i32", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memset64]
args =   ["@type.pointer", "@type.i64", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.memchr]
args =   ["@type.pointer", "@type.i32", "@type.i64"]
ret =    "@type.pointer"
[intrinsic.strcpy]
args =   ["@type.pointer", "@type.pointer"]
ret =    "@type.pointer"
[intrinsic.strcmp]
args =   ["@type.pointer", "@type.pointer"]
ret =    "@type.i32"
[intrinsic.strchr]
args =   ["@type.pointer", "@type.i32"]
ret =    "@type.pointer"
[intrinsic.strstr]
args =   ["@type.pointer", "@type.pointer"]
ret =    "@type.pointer"

# Low level intrinsics.
#

[intrinsic.loadnontemporal8]
symbol = "__builtin_load_nontemporal8"
args =   ["@type.pointer"]
ret =    "@type.i8"
[intrinsic.loadnontemporal16]
symbol = "__builtin_load_nontemporal16"
args =   ["@type.pointer"]
ret =    "@type.i16"
[intrinsic.loadnontemporal32]
symbol = "__builtin_load_nontemporal32"
args =   ["@type.pointer"]
ret =    "@type.i32"
[intrinsic.loadnontemporal64]
symbol = "__builtin_load_nontemporal64"
args =   ["@type.pointer"]
ret =    "@type.i64"
[intrinsic.loadnontemporal128]
symbol = "__builtin_load_nontemporal128"
args =   ["@type.pointer"]
ret =    "@type.i8x16"
[intrinsic.loadnontemporal256]
symbol = "__builtin_load_nontemporal256"
args =   ["@type.pointer"]
ret =    "@type.i8x32"
[intrinsic.loadnontemporal512]
symbol = "__builtin_load_nontemporal512"
args =   ["@type.pointer"]
ret =    "@type.i8x64"
[intrinsic.storenontemporal8]
symbol = "__builtin_store_nontemporal8"
args =   ["@type.pointer", "@type.i8"]
RET =    "@type.none"
[intrinsic.storenontemporal16]
symbol = "__builtin_store_nontemporal16"
args =   ["@type.pointer", "@type.i16"]
RET =    "@type.none"
[intrinsic.storenontemporal32]
symbol = "__builtin_store_nontemporal32"
args =   ["@type.pointer", "@type.i32"]
RET =    "@type.none"
[intrinsic.storenontemporal64]
symbol = "__builtin_store_nontemporal64"
args =   ["@type.pointer", "@type.i64"]
RET =    "@type.none"
[intrinsic.storenontemporal128]
symbol = "__builtin_store_nontemporal128"
args =   ["@type.pointer", "@type.i8x16"]
RET =    "@type.none"
[intrinsic.storenontemporal256]
symbol = "__builtin_store_nontemporal256"
args =   ["@type.pointer", "@type.i8x32"]
RET =    "@type.none"
[intrinsic.storenontemporal512]
symbol = "__builtin_store_nontemporal512"
args =   ["@type.pointer", "@type.i8x64"]
RET =    "@type.none"

[intrinsic.readcyclecounter]
symbol = "__builtin_readcyclecounter"
args   = []
ret =    "@type.i64"
[intrinsic.prefetch]
symbol = "__builtin_prefetech"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-rdgsbase32]
symbol = "_readgsbase_u32"
args   = []
ret =    "@type.i32"
[intrinsic.ia32-rdfsbase32]
symbol = "_readfsbase_u32"
args   = []
ret =    "@type.i32"
[intrinsic.ia32-rdgsbase64]
symbol = "_readgsbase_u64"
args   = []
ret =    "@type.i64"
[intrinsic.ia32-rdfsbase64]
symbol = "_readfsbase_u64"
args   = []
ret =    "@type.i64"
[intrinsic.ia32-wrgsbase32]
symbol = "_writegsbase_u32"
args   = ["@type.i32"]
ret =    "@type.none"
[intrinsic.ia32-wrfsbase32]
symbol = "_writefsbase_u32"
args   = ["@type.i32"]
ret =    "@type.none"
[intrinsic.ia32-wrgsbase64]
symbol = "_writegsbase_u64"
args   = ["@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-wrfsbase64]
symbol = "_writefsbase_u64"
args   = ["@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-swapgs]
symbol = "__swapgs"
args   = []
ret =    "@type.none"
[intrinsic.ia32-stmxcsr]
symbol = "_mm_getcsr"
args   = []
ret =    "@type.i32"
[intrinsic.ia32-ldmxcsr]
symbol = "_mm_setcsr"
args   = ["@type.i32"]
ret =    "@type.none"
[intrinsic.ia32-pause]
symbol = "_mm_pause"
args   = []
ret =    "@type.none"
[intrinsic.ia32-hlt]
symbol = "__hlt"
args   = []
ret =    "@type.none"
[intrinsic.ia32-invd]
symbol = "__invd"
args   = []
ret =    "@type.none"
[intrinsic.ia32-wbinvd]
symbol = "__wbinvd"
args   = []
ret =    "@type.none"
[intrinsic.ia32-readpid]
symbol = "__builtin_ia32_readpid"
args   = []
ret =    "@type.i32"
[intrinsic.ia32-cpuid]
symbol = "_cpuid"
args   = ["@type.i32", "@type.i32"]
ret =    "@type.i32x4"
[intrinsic.ia32-xgetbv]
symbol = "_xgetbv"
args   = ["@type.i32"]
ret =    "@type.i64"
[intrinsic.ia32-rdpmc]
symbol = "_rdpmc"
args   = ["@type.i32"]
ret =    "@type.i64"
[intrinsic.ia32-xsetbv]
symbol = "_xgetbv"
args   = ["@type.i32", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-rdmsr]
symbol = "__rdmsr"
args   = ["@type.i32"]
ret =    "@type.i64"
[intrinsic.ia32-wrmsr]
symbol = "__wrmsr"
args   = ["@type.i32", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-invlpg]
symbol = "__invlpg"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-invpcid]
symbol = "__invvpcid"
args   = ["@type.i32", "@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetcht0]
symbol = "_m_prefetcht0"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetcht1]
symbol = "_m_prefetcht1"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetcht2]
symbol = "_m_prefetcht2"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetchnta]
symbol = "_m_prefetchnta"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetchw]
symbol = "_m_prefetchw"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-prefetchwt1]
symbol = "_m_prefetchwt1"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-cldemote]
symbol = "_cldemote"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-clflush]
symbol = "_mm_clflush"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-clflushopt]
symbol = "_mm_clflushopt"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-clwb]
symbol = "_mm_clwb"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-clzero]
symbol = "_mm_clzero"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-outb]
symbol = "__outb"
args   = ["@type.i16", "@type.i8"]
ret =    "@type.none"
[intrinsic.ia32-outw]
symbol = "__outw"
args   = ["@type.i16", "@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-outd]
symbol = "__outd"
args   = ["@type.i16", "@type.i32"]
ret =    "@type.none"
[intrinsic.ia32-inb]
symbol = "__inb"
args   = ["@type.i16"]
ret =    "@type.i8"
[intrinsic.ia32-inw]
symbol = "__inw"
args   = ["@type.i16"]
ret =    "@type.i16"
[intrinsic.ia32-ind]
symbol = "__inl"
args   = ["@type.i16"]
ret =    "@type.i32"

[intrinsic.ia32-fxrstor]
symbol = "_fxrstor"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-fxrstor64]
symbol = "_fxrstor64"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-fxsave]
symbol = "_fxsave"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-fxsave64]
symbol = "_fxsave64"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-xrstor]
symbol = "_xrstor"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xrstor64]
symbol = "_xrstor64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xrstors]
symbol = "_xrstors"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xrstors64]
symbol = "_xrstors64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsave]
symbol = "_xsave"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsavec]
symbol = "_xsavec"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsaveopt]
symbol = "_xsaveopt"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsaves]
symbol = "_xsaves64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsave64]
symbol = "_xsave64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsavec64]
symbol = "_xsavec64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsaveopt64]
symbol = "_xsaveopt64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"
[intrinsic.ia32-xsaves64]
symbol = "_xsaves64"
args   = ["@type.pointer", "@type.i64"]
ret =    "@type.none"

[intrinsic.ia32-sgdt]
symbol = "__sgdt"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-sidt]
symbol = "__sidt"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-sldt]
symbol = "__sldt"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-smsw]
symbol = "__smsw"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-str]
symbol = "__str"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-lgdt]
symbol = "__lgdt"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-lidt]
symbol = "__lidt"
args   = ["@type.pointer"]
ret =    "@type.none"
[intrinsic.ia32-lldt]
symbol = "__lldt"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-ltr]
symbol = "__ltr"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-lmsw]
symbol = "__lmsw"
args   = ["@type.i16"]
ret =    "@type.none"

# -- Same order as registers! --
[intrinsic.ia32-getes]
symbol = "_getes"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-getcs]
symbol = "_getcs"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-getss]
symbol = "_getss"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-getds]
symbol = "_getds"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-getfs]
symbol = "_getfs"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-getgs]
symbol = "_getgs"
args   = []
ret =    "@type.i16"
[intrinsic.ia32-setes]
symbol = "_setes"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-setcs]
symbol = "_setcs"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-setss]
symbol = "_setss"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-setds]
symbol = "_setds"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-setfs]
symbol = "_setfs"
args   = ["@type.i16"]
ret =    "@type.none"
[intrinsic.ia32-setgs]
symbol = "_setgs"
args   = ["@type.i16"]
ret =    "@type.none"

[intrinsic.retaddr]
symbol = "_ReturnAddress"
args =   []
ret =    "@type.pointer"
[intrinsic.addr-retaddr]
symbol = "_AddressOfReturnAddress"
args =   []
ret =    "@type.pointer"